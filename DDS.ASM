; TTL Logic Based Direct Digital Synthesis (DDS)
; Mike McCann KB2GHZ
; 2020 TAPR/DCC
;
		PROCESSOR	16F628A
		INCLUDE		<p16f628a.inc>
		__CONFIG	_WDT_OFF & _FOSC_HS & _MCLRE_ON

; COMMON RAM STORAGE

LINEBUF		EQU		__COMMON_RAM_START ; INPUTTED COMMAND
CHCNT		EQU		LINEBUF+5	; NUMBER OF INPUTTED CHARACTERS
SREG1		EQU		CHCNT+1		; SCRATCH REGISTER
SREG2		EQU		SREG1+1		; SCRATCH REGISTER
TWLO		EQU		SREG2+1		; TUNING WORD LSB
TWHI		EQU		TWLO+1		; TUNING WORD MSB

CHLIM		EQU		5		; MAXIMUM 5 CHARACTERS IN LINE BUFFER

; ASCII CHARACTER CODES

CR		ORG 	0X0D	; CARRIAGE RETURN
LF		ORG	0X0A	; LINE FEED
BEL		ORG	0X07	; SOUND BELL
DEL		ORG	0X10	; DELETE
BS		ORG	0X08	; BACKSPACE
ZERO		ORG	0X30	; ASCII 0
NINE		ORG	0X39	; ASCII 9

; 2'S COMPLMENT CONSTANTS
TWOS30H		ORG	0XD0
TWOS37H		ORG	0XC9

		ORG		__VECTOR_RESET
		GOTO		START	; POWER ON RESET
		ORG		__VECTOR_INT
		GOTO		ISR	; INTERRUPT HANDLER
;
START:		CALL		HWINIT	; SETUP HARDWARE
MESG:		CALL		STARTMES
REPL:		CALL		GETCMD	; ACCEPT COMMAND
		CALL		RUNCMD	; EXECUTE COMMAND
		GOTO		REPL

		PAGE
; DISPLAY A STARTUP MESSAGE ON THE CONSOLE
STARTMES:	MOVLW		'D'
		CALL		OUTCH
		MOVLW		'D'
		CALL		OUTCH
		MOVLW		'S'
		CALL		OUTCH
		MOVLW		0X20	; ASCII SPACE
		CALL		OUTCH
		MOVLW		'V'
		CALL		OUTCH
		MOVLW		'1'
		CALL		OUTCH
		MOVLW		'.'
		CALL		OUTCH
		MOVLW		'1'
		CALL		OUTCH
		MOVLW		0X0D	; ASCII LF
		CALL		OUTCH
		MOVLW		0X0A	; ASCII CR
		CALL		OUTCH
		RETURN
		
		PAGE
; INPUT A COMMAND FROM THE SERIAL PORT
GETCMD:		MOVLW		CR	; CARRIAGE RETURN
		CALL		OUTCH
		MOVLW		LF	; LINE FEED
		CALL		OUTCH
		MOVLW		'*'	; COMMAND PROMPT
		CALL		OUTCH

; INPUT CHARACTERS
INCMD:		CLRF		CHCNT	; RESET CHARACTER COUNT
		MOVLW		LINEBUF	; INPUT BUFFER'S ADDRESS
		MOVWF		FSR	; SET FILE POINTER 
NXT:		CALL		GETCH	; INPUT ONE BYTE
		MOVWF		SREG1	; SAVE THE INPUTTED CHARACTER
		SUBLW		CR	; CARRIAGE RETURN ?
		BNZ		INCMD1	; NO
		RETURN			; END OF COMMAND

INCMD1:		MOVFW		CHCNT	; CHARACTER COUNT
		SUBLW		CHLIM	; AT LIMIT?
		BNZ		INCMD2	; NO

		MOVFW		SREG1	; INPUTTED CHARACTER
		SUBLW		BS	; BACKSPACE?
		BNZ		INCMD6	; NOPE

; AT LIMIT,  BACKSPACE
		MOVLW		BS
		CALL		OUTCH	; BACKSPACE
		MOVLW		' '	; SPACE
		CALL		OUTCH
		MOVLW		BS	; BACKSPACE
		CALL		OUTCH
		DECF		CHCNT	; DECREMENT CHARACTER COUNT
		DECF		FSR	; REVERSE POINTER		
		GOTO		NXT	; NEXT CHARACTER		

INCMD6:		MOVLW		BEL	; ASCII BELL
		CALL		OUTCH	; SEND BELL TO TERMINAL
		GOTO		NXT	; WAIT FOR INPUT

INCMD2:		MOVFW		SREG1	; GET THE CHARACTER
		SUBLW		BS	; BACKSPACE?
		BNZ		INCMD8	; NO

INCMD3:		MOVF		CHCNT,1	; NUMBER OF INPUTTED CHARACTERS
		BZ		INCMD5	; EMPTY BUFFER?
		MOVLW		BS	; BACK SPACE
		CALL		OUTCH	; 
		MOVLW		' '	; SPACE
		CALL		OUTCH
		MOVLW		BS	; BACK SPACE
		CALL		OUTCH
		DECF		CHCNT	; DECREMENT COUNT
		DECF		FSR	; BACKUP ONE POSITION
		GOTO		NXT	; GET NEXT CHARACTER
 
INCMD5:		MOVLW		BEL	; ASCII BELL
		CALL		OUTCH	; SEND BELL TO TERMINAL
		GOTO		NXT	; GET THE NEXT CHARACTER

; DETERMINE IF THE CHARACTER IS A DIGIT
INCMD8:		MOVLW		ZERO	; ASCII 0
		SUBWF		SREG1,0	; COMPARE
		BNC		INCMD4	; < ASCII 0
		MOVFW		SREG1	; INPUTTED CHARACTER
		SUBLW		NINE	; ASCII 9
		BNC		INCMD4	; > ASCII 9

; THE CHARACTER IS A DIGIT 0...9
		MOVFW		SREG1	; INPUTTED CHARACTER
		MOVWF		INDF	; DEPOSIT IN LINE BUFFER AREA
		INCF		FSR	; POINT AT NEXT LOCATION
		INCF		CHCNT	; BUMP CHARACTER COUNT
		MOVFW		SREG1	; INPUTTED CHARACTER
		CALL		OUTCH	; ECHO THE INPUTTED CHARACTER
		GOTO		NXT	; GET THE NEXT CHARACTER

; THE CHARACTER IS NOT A DIGIT
INCMD4:		MOVFW		SREG1	; INPUTTED CHARACTER
		ANDLW		0XDF	; FORCE UPPER CASE
		CALL		OUTCH	; ECHO THE CHARACTER
		MOVWF		INDF	; DEPOSIT IN LINE BUFFER AREA
		INCF		FSR	; POINT AT NEXT LOCATION
		INCF		CHCNT	; BUMP THE CHARACTER COUNT
		GOTO		NXT	; GET THE NEXT CHARACTER		

		PAGE

; EXECUTE A COMMAND
RUNCMD:		MOVFW		LINEBUF	; GET THE COMMAND LETTER
		SUBLW		'F'	; FREQUENCY SET COMMAND?
		BNZ		RUNCMD1	; NO
		CALL		SETFREQ	; SET THE FREQUENCY
		RETURN

RUNCMD1:	MOVFW		LINEBUF	; GET COMMAND LETTER
		SUBLW		'R'	; RESET ACCUMULATOR
		BNZ		RUNCMD2	; NO
		CALL		ACCRST	; ACCUMULATOR RESET
		RETURN

RUNCMD2:	MOVFW		LINEBUF	; GET COMMAND LETTER
		SUBLW		'T'	; TUNING WORD RESET COMMAND
		BNZ		RUNCMD3	; NO
		CALL		TWRST	; RESET THE TUNING WORD
		RETURN

; UNKNOWN COMMAND
RUNCMD3:	MOVLW		CR
		CALL		OUTCH
		MOVLW		LF
		CALL		OUTCH
		MOVLW		'?'
		CALL		OUTCH
		CALL		OUTCH
		CALL		OUTCH
		MOVLW		CR
		CALL		OUTCH
		MOVLW		LF
		CALL		OUTCH
		RETURN

		PAGE

; SET FREQUENCY
SETFREQ:	MOVLW		CHCNT		; INPUTTED CHARACTER COUNT
		SUBLW		5		; COMPARE WITH 5
		BZ		SETFQ		; VALID COMMAND?
; BAD SYNTAX
		MOVLW		CR
		CALL		OUTCH
		MOVLW		LF
		CALL		OUTCH
		MOVLW		'>'
		CALL		OUTCH
		RETURN
;
SETFQ:		MOVFW		LINEBUF+1	; GET 1ST HEX CHARACTER
		CALL		HEX2BIN		; CONVERT TO BINARY
		MOVWF		TWHI		; SAVE RESULT
		SWAPF		TWHI		; MOVE RESULT TO UPPER NIBBLE
		MOVFW		LINEBUF+2	; GET 2ND HEX CHARACTER
		CALL		HEX2BIN		; CONVERT TO BINARY
		IORWF		TWHI,1		; COMBINE THE UPPER AND LOWER NIBBLES
;
		MOVFW		LINEBUF+3	; GET 3RD HEX CHARACTER
		CALL		HEX2BIN		; CONVERT TO BINARY
		MOVWF		TWLO		; SAVE RESULT
		SWAPF		TWLO		; MOVE RESULT TO UPPER NIBBLE
		MOVFW		LINEBUF+4	; GET 4TH HEX CHARACTER
		CALL		HEX2BIN		; CONVERT TO BINARY
		IORWF		TWLO		; COMBINE THE UPPER AND LOWER NIBBLES
;
; SHIFT THE TUNING WORD VALUE INTO THE SIPO SHIFT-REGISTER
;
; TRANSFER THE MSB FIRST
;
		MOVLW		8		; 8 BITS
		MOVWF		SREG1		; BIT COUNTER
M3:		RRF		TWHI,1		; ROTATE RIGHT
		BNC		M1		; NOT SET
		BSF		PORTA,RA2	; TW DATA 1
		GOTO		M2
M1:		BCF		PORTA,RA2	; TW DATA 0
M2:		BSF		PORTA,RA1	; TW CLOCK 0 => 1
		NOP				; 100NS @ 10Mhz
		BCF		PORTA,RA1	; TW CLOCK 1 => 0
		DECF		SREG1		; 8 BITS SHIFTED?
		BNZ		M3		; NO
;
; TRANSFER THE LSB
;
		MOVLW		8		; 8 BITS
		MOVWF		SREG1		; BIT COUNTER
N3:		RRF		TWLO,1		; ROTATE RIGHT
		BNC		N1		; BIT NOT SET
		BSF		PORTA,RA2	; TW DATA 1
		GOTO		N2
N1:		BCF		PORTA,RA2	; TW DATA 0
N2:		BSF		PORTA,RA1	; TW CLOCK 0 => 1
		NOP				; 100NS @ 10Mhz
		BCF		PORTA,RA1	; TW CLOCK 1 => 0
		DECF		SREG1		; 8 BITS SHIFTED?
		BNZ		N3
;
		RETURN

; PHASE ACCUMULATOR RESET
ACCRST:		BCF		PORTA,RA3	; HIGH -> LOW
		NOP				; 100NS @ 10Mhz
		BSF		PORTA,RA3	; LOW -> HIGH
		RETURN

; TUNING WORD RESET
TWRST:		BCF		PORTA,RA0	; HIGH -> LOW
		NOP				; 100NS @ 10Mhz
		BSF		PORTA,RA0	; LOW -> HIGH
		RETURN

; CONVERT ASCII HEX CHARACTER INTO 4-BIT BINARY VALUE
HEX2BIN:	MOVWF		SREG1		; SAVE THE HEX CHARACTER
		SUBLW		NINE		; COMPARE WITH ASCII 9
		MOVFW		SREG1		; RESTORE HEX CHARACTER
		BNC		LETTER
		ADDLW		TWOS30H		; CONVERT HEX DIGIT 0,...,9
		RETURN
LETTER:		ADDLW		TWOS37H		; CONVERT HEX LETTER A,...,F
		RETURN

		PAGE
; OUTPUT CHARACTER PASSED IN W ON THE SERIAL PORT
OUTCH:		BSF		STATUS,RP0	; ** BANK 1 **
POLL:		BTFSS		TXSTA,TRMT	; POLL SHIFT REGISTER STATUS
		GOTO		POLL
		BCF		STATUS,RP0	; ** BANK 0 **
		MOVWF		TXREG		; TX DATA REGISTER
		RETURN

; RETURN A CHARACTER FROM THE SERIAL PORT IN W
GETCH:		BTFSS		PIR1,RCIF	; DATA AVAILABLE?
		GOTO		GETCH
		MOVFW		RCREG		; GET RECEIVED CHARACTER
		RETURN


PAUSE:		NOP
		RETURN

		PAGE

HWINIT:
; CONFIGURE THE SERIAL PORT FOR 9600 BPS, 1 STOP BIT, NO PARITY
		MOVLW		B'10010000'
		MOVWF		RCSTA	; RECEIVE CONTROL REGISTER
		MOVLW		B'00100100'
		BSF		STATUS,RP0 ; ** BANK 1 **
		MOVWF		TXSTA	; TRANSMIT CONTROL REGISTER
		MOVLW		0x40	; BGRH=1
		MOVWF		SPBRG	; DIVIDER FOR BRG - 9600 BPS
; CONFIGURE PINS RB2 & RB1 AS SERIAL TX AND RX
		BSF		TRISB,TRISB1
		BSF		TRISB,TRISB2
; CONFIGURE PINS RA0, RA1, RA2, AND RA3 AS OUTPUTS
		BCF		TRISA,TRISA0	; RA0 TW RESET
		BCF		TRISA,TRISA1	; RA1 TW CLOCK
		BCF		TRISA,TRISA2	; RA2 TW DATA
		BCF		TRISA,TRISA3	; RA3 ACCUMULATOR RESET
		BCF		STATUS,RP0	; ** BANK 0 **
; SET RESET SIGNALS
		BSF		PORTA,RA0	; DEASSERT TW RESET
		BSF		PORTA,RA3	; DEASSERT ACCUMULATOR RESET
		RETURN

; INTERRUPT ROUTINE
ISR:		NOP
		RETFIE
		END

